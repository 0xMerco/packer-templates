my-ubuntu-14.04-server-amd64 output will be in this color.

==> my-ubuntu-14.04-server-amd64: Downloading or copying ISO
    my-ubuntu-14.04-server-amd64: Downloading or copying: http://releases.ubuntu.com/14.04.5/ubuntu-14.04.5-server-amd64.iso
==> my-ubuntu-14.04-server-amd64: Creating hard drive...
==> my-ubuntu-14.04-server-amd64: Starting HTTP server on port 8012
==> my-ubuntu-14.04-server-amd64: Found port for communicator (SSH, WinRM, etc): 4227.
==> my-ubuntu-14.04-server-amd64: Looking for available port between 5900 and 6000
==> my-ubuntu-14.04-server-amd64: Found available VNC port: 5994
==> my-ubuntu-14.04-server-amd64: Starting VM, booting from CD-ROM
==> my-ubuntu-14.04-server-amd64: Overriding defaults Qemu arguments with QemuArgs...
==> my-ubuntu-14.04-server-amd64: Waiting 2s for boot...
==> my-ubuntu-14.04-server-amd64: Connecting to VM via VNC
==> my-ubuntu-14.04-server-amd64: Typing the boot command over VNC...
==> my-ubuntu-14.04-server-amd64: Waiting for SSH to become available...
==> my-ubuntu-14.04-server-amd64: Connected to SSH!
==> my-ubuntu-14.04-server-amd64: Provisioning with shell script: scripts/ubuntu/update.sh
    my-ubuntu-14.04-server-amd64: [sudo] password for vagrant: + export DEBIAN_FRONTEND=noninteractive
    my-ubuntu-14.04-server-amd64: + DEBIAN_FRONTEND=noninteractive
    my-ubuntu-14.04-server-amd64: + apt-get update
    my-ubuntu-14.04-server-amd64: + apt-get -y upgrade
    my-ubuntu-14.04-server-amd64: Extracting templates from packages: 100%
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: Current default time zone: 'Etc/UTC'
    my-ubuntu-14.04-server-amd64: Local time is now:      Fri Dec 16 01:58:51 UTC 2016.
    my-ubuntu-14.04-server-amd64: Universal Time is now:  Fri Dec 16 01:58:51 UTC 2016.
    my-ubuntu-14.04-server-amd64: Run 'dpkg-reconfigure tzdata' if you wish to change it.
    my-ubuntu-14.04-server-amd64:
==> my-ubuntu-14.04-server-amd64: Provisioning with shell script: scripts/linux-common/vagrant.sh
    my-ubuntu-14.04-server-amd64: [sudo] password for vagrant: + date
    my-ubuntu-14.04-server-amd64: + SSH_USER=vagrant
    my-ubuntu-14.04-server-amd64: ==> Giving vagrant sudo powers
    my-ubuntu-14.04-server-amd64: ==> Installing vagrant key
    my-ubuntu-14.04-server-amd64: + SSH_USER_HOME=/home/vagrant
    my-ubuntu-14.04-server-amd64: + VAGRANT_INSECURE_KEY='ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key'
    my-ubuntu-14.04-server-amd64: + echo '==> Giving vagrant sudo powers'
    my-ubuntu-14.04-server-amd64: + echo 'vagrant        ALL=(ALL)       NOPASSWD: ALL'
    my-ubuntu-14.04-server-amd64: + echo '==> Installing vagrant key'
    my-ubuntu-14.04-server-amd64: + mkdir /home/vagrant/.ssh
    my-ubuntu-14.04-server-amd64: + chmod 700 /home/vagrant/.ssh
    my-ubuntu-14.04-server-amd64: + cd /home/vagrant/.ssh
    my-ubuntu-14.04-server-amd64: + echo 'ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key'
    my-ubuntu-14.04-server-amd64: + chmod 600 /home/vagrant/.ssh/authorized_keys
    my-ubuntu-14.04-server-amd64: + chown -R vagrant:vagrant /home/vagrant/.ssh
==> my-ubuntu-14.04-server-amd64: Provisioning with shell script: /var/tmp/packer-shell773868761
==> my-ubuntu-14.04-server-amd64: Provisioning with Ansible...
==> my-ubuntu-14.04-server-amd64: Executing Ansible: ansible-playbook /home/ruzickap/data/github/packer-templates/ansible/site.yml -i /var/tmp/packer-provisioner-ansible092351252 --private-key /var/tmp/ansible-key384846921
==> my-ubuntu-14.04-server-amd64: SSH proxy: serving on 127.0.0.1:33965
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: PLAY [all] *********************************************************************
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [setup] *******************************************************************
    my-ubuntu-14.04-server-amd64: SSH proxy: accepted connection
==> my-ubuntu-14.04-server-amd64: authentication attempt from 127.0.0.1:55052 to 127.0.0.1:33965 as vagrant using none
==> my-ubuntu-14.04-server-amd64: unauthorized key
==> my-ubuntu-14.04-server-amd64: authentication attempt from 127.0.0.1:55052 to 127.0.0.1:33965 as vagrant using publickey
==> my-ubuntu-14.04-server-amd64: unauthorized key
==> my-ubuntu-14.04-server-amd64: authentication attempt from 127.0.0.1:55052 to 127.0.0.1:33965 as vagrant using publickey
==> my-ubuntu-14.04-server-amd64: unauthorized key
==> my-ubuntu-14.04-server-amd64: authentication attempt from 127.0.0.1:55052 to 127.0.0.1:33965 as vagrant using publickey
==> my-ubuntu-14.04-server-amd64: unauthorized key
==> my-ubuntu-14.04-server-amd64: authentication attempt from 127.0.0.1:55052 to 127.0.0.1:33965 as vagrant using publickey
==> my-ubuntu-14.04-server-amd64: unauthorized key
==> my-ubuntu-14.04-server-amd64: authentication attempt from 127.0.0.1:55052 to 127.0.0.1:33965 as vagrant using publickey
==> my-ubuntu-14.04-server-amd64: authentication attempt from 127.0.0.1:55052 to 127.0.0.1:33965 as vagrant using publickey
    my-ubuntu-14.04-server-amd64: ok: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Include OS-specific variables] *************************
    my-ubuntu-14.04-server-amd64: ok: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Update repositories] ***********************************
    my-ubuntu-14.04-server-amd64: changed: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Install EPEL repo.] ************************************
    my-ubuntu-14.04-server-amd64: skipping: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Import EPEL GPG key.] **********************************
    my-ubuntu-14.04-server-amd64: skipping: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Install common packages] *******************************
    my-ubuntu-14.04-server-amd64: changed: [default] => (item=[u'acpid', u'atop', u'bash-completion', u'byobu', u'cloud-init', u'curl', u'dstat', u'ethtool', u'haveged', u'htop', u'iftop', u'iotop', u'lftp', u'logrotate', u'logwatch', u'lshw', u'lsof', u'man', u'mc', u'mlocate', u'mutt', u'nmap', u'ntp', u'ntpdate', u'openssh-server', u'parted', u'postfix', u'rsync', u'screen', u'strace', u'sysstat', u'tcpdump', u'telnet', u'tmux', u'traceroute', u'aptitude', u'cloud-initramfs-growroot', u'debconf-utils', u'dnsutils', u'bsd-mailx', u'linux-virtual', u'mtr-tiny', u'snmp', u'snmpd', u'sosreport', u'tcpflow', u'tmpreaper', u'unattended-upgrades', u'update-notifier-common', u'vim'])
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Chnage root password] **********************************
    my-ubuntu-14.04-server-amd64: changed: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Disable mouse in mc (/etc/profile.d/mc.sh)] ************
==> my-ubuntu-14.04-server-amd64: starting sftp subsystem
    my-ubuntu-14.04-server-amd64: changed: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Create directory "/etc/skel/.config/mc"] ***************
    my-ubuntu-14.04-server-amd64: changed: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Create directory for mc inside /etc/skel] **************
==> my-ubuntu-14.04-server-amd64: starting sftp subsystem
    my-ubuntu-14.04-server-amd64: changed: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Check if user dirctory exists] *************************
    my-ubuntu-14.04-server-amd64: ok: [default] => (item=/home/ubuntu)
    my-ubuntu-14.04-server-amd64: ok: [default] => (item=/home/centos)
    my-ubuntu-14.04-server-amd64: ok: [default] => (item=/home/vagrant)
    my-ubuntu-14.04-server-amd64: ok: [default] => (item=/root)
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Copy /etc/skel/.config/ directory to root] *************
    my-ubuntu-14.04-server-amd64: skipping: [default] => (item=/home/ubuntu)
    my-ubuntu-14.04-server-amd64: skipping: [default] => (item=/home/centos)
    my-ubuntu-14.04-server-amd64: changed: [default] => (item=/home/vagrant)
    my-ubuntu-14.04-server-amd64: changed: [default] => (item=/root)
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Change owner for skel_copy_users/.config] **************
    my-ubuntu-14.04-server-amd64: skipping: [default] => (item=/home/ubuntu)
    my-ubuntu-14.04-server-amd64: skipping: [default] => (item=/home/centos)
    my-ubuntu-14.04-server-amd64: changed: [default] => (item=/home/vagrant)
    my-ubuntu-14.04-server-amd64: ok: [default] => (item=/root)
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Change rights for skel_copy_users/.config] *************
    my-ubuntu-14.04-server-amd64: skipping: [default] => (item=/home/ubuntu)
    my-ubuntu-14.04-server-amd64: skipping: [default] => (item=/home/centos)
    my-ubuntu-14.04-server-amd64: changed: [default] => (item=/home/vagrant)
    my-ubuntu-14.04-server-amd64: changed: [default] => (item=/root)
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Set format for history command (/etc/profile.d/history_format.sh)] ***
==> my-ubuntu-14.04-server-amd64: starting sftp subsystem
    my-ubuntu-14.04-server-amd64: changed: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Add sar alias (/etc/bash.bashrc)] **********************
    my-ubuntu-14.04-server-amd64: changed: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Tweak vim (/etc/vim/vimrc)] ****************************
    my-ubuntu-14.04-server-amd64: changed: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Tweak screen (/etc/screenrc)] **************************
    my-ubuntu-14.04-server-amd64: changed: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Tweak logrotate (/etc/logrotate.conf)] *****************
    my-ubuntu-14.04-server-amd64: changed: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Change logwatch to display weekly status (/etc/logwatch/conf/logwatch.conf)] ***
    my-ubuntu-14.04-server-amd64: changed: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Move logwatch cron entry from cron.daily to cron.weekly] ***
    my-ubuntu-14.04-server-amd64: changed: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Place snmpd.conf file to the /etc/snmp/] ***************
==> my-ubuntu-14.04-server-amd64: starting sftp subsystem
    my-ubuntu-14.04-server-amd64: changed: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Configure sshd] ****************************************
    my-ubuntu-14.04-server-amd64: changed: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Allow root SSH access and set "PasswordAuthentication yes" in /etc/ssh/sshd_config] ***
    my-ubuntu-14.04-server-amd64: changed: [default] => (item={u'regexp': u'^PermitRootLogin', u'line': u'PermitRootLogin yes'})
    my-ubuntu-14.04-server-amd64: changed: [default] => (item={u'regexp': u'^PasswordAuthentication', u'line': u'PasswordAuthentication yes'})
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Configure ssh client] **********************************
    my-ubuntu-14.04-server-amd64: changed: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Tweak sysstat in cron.d] *******************************
    my-ubuntu-14.04-server-amd64: changed: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Configure cloud-init] **********************************
==> my-ubuntu-14.04-server-amd64: starting sftp subsystem
    my-ubuntu-14.04-server-amd64: changed: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Remove /dev/fd0 (floppy) from /etc/fstab (floppy is presend by default when using KVM provisioner)] ***
    my-ubuntu-14.04-server-amd64: changed: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Ensure fstab uses nodiratime and noatime] **************
    my-ubuntu-14.04-server-amd64: changed: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Check if /root/.ssh/authorized_keys exists] ************
    my-ubuntu-14.04-server-amd64: ok: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Remove the Amazon AWS "disable root" feature] **********
    my-ubuntu-14.04-server-amd64: skipping: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : include] ***********************************************
    my-ubuntu-14.04-server-amd64: included: /home/ruzickap/data/github/packer-templates/ansible/roles/common_defaults/tasks/Debian.yml for default
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Upgrade packages] **************************************
    my-ubuntu-14.04-server-amd64: changed: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Enable fsckfix during boot] ****************************
    my-ubuntu-14.04-server-amd64: changed: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Remove /tmp/* files during boot] ***********************
    my-ubuntu-14.04-server-amd64: changed: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Enable sysstat (sar)] **********************************
    my-ubuntu-14.04-server-amd64: changed: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Change shell to /bin/bash for new users (/etc/default/useradd)] ***
    my-ubuntu-14.04-server-amd64: changed: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Change shell to /bin/bash for new users (/etc/default/useradd)] ***
    my-ubuntu-14.04-server-amd64: changed: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Modify Unattended upgrade settings] ********************
    my-ubuntu-14.04-server-amd64: changed: [default] => (item={u'regexp': u'^//Unattended-Upgrade::Mail "root";', u'replace': u'Unattended-Upgrade::Mail "root";'})
    my-ubuntu-14.04-server-amd64: changed: [default] => (item={u'regexp': u'^//Unattended-Upgrade::Remove-Unused-Dependencies "false";', u'replace': u'Unattended-Upgrade::Remove-Unused-Dependencies "true";'})
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Autoremove unused packages] ****************************
    my-ubuntu-14.04-server-amd64: ok: [default]
    my-ubuntu-14.04-server-amd64:  [WARNING]: Consider using apt module rather than running apt-get
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Disable and stop services during boot] *****************
    my-ubuntu-14.04-server-amd64: skipping: [default] => (item=None)
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: TASK [common_defaults : Enable services during boot] ***************************
    my-ubuntu-14.04-server-amd64: skipping: [default] => (item=None)
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: RUNNING HANDLER [common_defaults : restart sshd] *******************************
    my-ubuntu-14.04-server-amd64: changed: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: RUNNING HANDLER [common_defaults : reload snmpd] *******************************
    my-ubuntu-14.04-server-amd64: changed: [default]
    my-ubuntu-14.04-server-amd64:
    my-ubuntu-14.04-server-amd64: PLAY RECAP *********************************************************************
    my-ubuntu-14.04-server-amd64: default                    : ok=39   changed=33   unreachable=0    failed=0
    my-ubuntu-14.04-server-amd64:
==> my-ubuntu-14.04-server-amd64: shutting down the SSH proxy
==> my-ubuntu-14.04-server-amd64: Provisioning with shell script: scripts/linux-common/cleanup.sh
    my-ubuntu-14.04-server-amd64: + SSH_USER=vagrant
    my-ubuntu-14.04-server-amd64: + echo '==> Cleaning up udev rules'
    my-ubuntu-14.04-server-amd64: ==> Cleaning up udev rules
    my-ubuntu-14.04-server-amd64: + rm -rf /dev/.udev/ /lib/udev/rules.d/75-persistent-net-generator.rules
    my-ubuntu-14.04-server-amd64: + service rsyslog stop
    my-ubuntu-14.04-server-amd64: + '[' -f /etc/os-release ']'
    my-ubuntu-14.04-server-amd64: rsyslog stop/waiting
    my-ubuntu-14.04-server-amd64: ==> Cleaning up leftover dhcp leases
    my-ubuntu-14.04-server-amd64: + grep -iq debian /etc/os-release
    my-ubuntu-14.04-server-amd64: + export DEBIAN_FRONTEND=noninteractive
    my-ubuntu-14.04-server-amd64: + DEBIAN_FRONTEND=noninteractive
    my-ubuntu-14.04-server-amd64: + echo 'pre-up sleep 2'
    my-ubuntu-14.04-server-amd64: + echo '==> Cleaning up leftover dhcp leases'
    my-ubuntu-14.04-server-amd64: + '[' -d /var/lib/dhcp3 ']'
    my-ubuntu-14.04-server-amd64: + '[' -d /var/lib/dhcp ']'
    my-ubuntu-14.04-server-amd64: + rm /var/lib/dhcp/dhclient.eth0.leases /var/lib/dhcp/dhclient.leases
    my-ubuntu-14.04-server-amd64: + apt-get -y autoremove --purge
    my-ubuntu-14.04-server-amd64: Reading package lists...
    my-ubuntu-14.04-server-amd64: Building dependency tree...
    my-ubuntu-14.04-server-amd64: Reading state information...
    my-ubuntu-14.04-server-amd64: 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
    my-ubuntu-14.04-server-amd64: + apt-get -y clean
    my-ubuntu-14.04-server-amd64: + apt-get -y autoclean
    my-ubuntu-14.04-server-amd64: Reading package lists...
    my-ubuntu-14.04-server-amd64: Building dependency tree...
    my-ubuntu-14.04-server-amd64: Reading state information...
    my-ubuntu-14.04-server-amd64: + echo '==> Cleaning up tmp'
    my-ubuntu-14.04-server-amd64: + rm -rf /tmp/script_3388.sh /tmp/ssh-VwJ8Qlb59C
    my-ubuntu-14.04-server-amd64: ==> Cleaning up tmp
    my-ubuntu-14.04-server-amd64: + unset HISTFILE
    my-ubuntu-14.04-server-amd64: + rm -f /root/.bash_history
    my-ubuntu-14.04-server-amd64: + rm -f /home/vagrant/.bash_history
    my-ubuntu-14.04-server-amd64: + find /var/log -type f
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: ==> Clearing last login information
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo -ne ''
    my-ubuntu-14.04-server-amd64: + read f
    my-ubuntu-14.04-server-amd64: + echo '==> Clearing last login information'
    my-ubuntu-14.04-server-amd64: + dd if=/dev/zero of=/EMPTY_FILE bs=1M
    my-ubuntu-14.04-server-amd64: + echo 'dd exit code 1 is suppressed'
    my-ubuntu-14.04-server-amd64: dd exit code 1 is suppressed
    my-ubuntu-14.04-server-amd64: + rm -f /EMPTY_FILE
    my-ubuntu-14.04-server-amd64: + sync
==> my-ubuntu-14.04-server-amd64: Gracefully halting virtual machine...
==> my-ubuntu-14.04-server-amd64: Converting hard drive...
==> my-ubuntu-14.04-server-amd64: Running post-processor: vagrant
==> my-ubuntu-14.04-server-amd64 (vagrant): Creating Vagrant box for 'libvirt' provider
    my-ubuntu-14.04-server-amd64 (vagrant): Copying from artifact: output-my-ubuntu-14.04-server-amd64/packer-my-ubuntu-14.04-server-amd64
    my-ubuntu-14.04-server-amd64 (vagrant): Using custom Vagrantfile: Vagrantfile-linux.template
    my-ubuntu-14.04-server-amd64 (vagrant): Compressing: Vagrantfile
    my-ubuntu-14.04-server-amd64 (vagrant): Compressing: box.img
    my-ubuntu-14.04-server-amd64 (vagrant): Compressing: metadata.json
Build 'my-ubuntu-14.04-server-amd64' finished.

==> Builds finished. The artifacts of successful builds are:
--> my-ubuntu-14.04-server-amd64: 'libvirt' provider box: my-ubuntu-14.04-server-amd64-libvirt.box
