---
# This can be used only with latest Ubuntu
- hosts: all
  gather_facts: false

  vars:
    build_path: /var/tmp/

    packages:
      - ansible
      - curl
      - docker.io
      - git
      - gitlab-runner
      - jq
      - libvirt-bin
      - libvirt-dev
      - python-pip
      - unzip
      - virtualbox-qt
      - wget
    packer_templates_git_repo: https://github.com/ruzickap/packer-templates.git

    vagrant_plugins:
      - vagrant-libvirt
      - vagrant-winrm

  tasks:
    - name: Install Python
      raw: sudo bash -x -c "test -e /usr/bin/python || test -x /usr/bin/apt && ( apt -qqy update && apt install -y python-minimal )"
      register: output
      changed_when: output.stdout is search("Unpacking")

    - name: Gather facts
      setup:

    - block:
      - name: Update all packages to the latest version
        apt:
          upgrade: dist
          update_cache: yes
        register: result
        until: result is succeeded

      - name: Get latest version of Vagrant
        uri:
          url: https://checkpoint-api.hashicorp.com/v1/check/vagrant
          return_content: yes
        register: vagrant_uri

      - name: Install Vagrant
        apt:
          deb: "https://releases.hashicorp.com/vagrant/{{ vagrant_uri.json.current_version }}/vagrant_{{ vagrant_uri.json.current_version }}_{{ ansible_architecture }}.deb"
        register: result
        until: result is succeeded

      - name: Add GitLabâ€™s official repository
        shell: curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.deb.sh | sudo bash
        args:
          creates: /etc/apt/sources.list.d/runner_gitlab-runner.list

      - name: Install packages
        apt:
          name: "{{ item }}"
        loop: "{{ packages }}"
        register: result
        until: result is succeeded

      # python-winrm for python2 is not part of ubuntu
      - name: Instal pywinrm
        pip:
          name: pywinrm
        register: result
        until: result is succeeded

      - name: Add the current user "{{ ansible_user_id }}" to docker and libvirt group
        user:
          name: "{{ ansible_user_id }}"
          groups: docker,kvm,libvirt
          append: yes

      - name: Add the gitlab-runner user to docker and libvirt group
        user:
          name: gitlab-runner
          groups: docker,kvm,libvirt
          append: yes

      # Yhis is not needed for Fedora, because in Fedora it's "crw-rw-rw- 1 root kvm 10, 232 Feb 13 09:58 /dev/kvm"
      - name: Chnage righs for /dev/kvm
        blockinfile:
          path: /etc/udev/rules.d/60-qemu-system-common.rules
          create: yes
          block: |
            # Chnaging rights of /dev/kvm from 0660 to 0666
            KERNEL=="kvm", GROUP="kvm", MODE="0666"

      - name: Get latest version of Packer
        uri:
          url: https://checkpoint-api.hashicorp.com/v1/check/packer
          return_content: yes
        register: packer_uri

      - name: Download and unzip packer
        unarchive:
          src: "https://releases.hashicorp.com/packer/{{ packer_uri.json.current_version }}/packer_{{ packer_uri.json.current_version }}_linux_amd64.zip"
          dest: /usr/local/bin/
          remote_src: yes
          creates: /usr/local/bin/packerio
          validate_certs: false

      - name: Move packer to packerio
        command: mv /usr/local/bin/packer /usr/local/bin/packerio
        args:
          creates: /usr/local/bin/packerio

      - name: Remove configuration of unix socket for libvirt (/var/run/libvirt/libvirt-sock)
        replace:
          path: /etc/libvirt/libvirtd.conf
          # Commend all lines beginning with "unix_sock_"
          regexp: '^unix_sock_.*'
          replace: '#&'
          backup: yes

      - name: Reboot the machine to use new kernel
        reboot:
      become: true

    - name: List installed Vagrant Plugins
      command: vagrant plugin list
      register: vagrant_plugin_list
      changed_when: false

    - name: Install Vagrant Plugins
      command: vagrant plugin install {{ item }}
      loop: "{{ vagrant_plugins }}"
      when: vagrant_plugin_list.stdout is not search(item)

    - name: Clone the git repository
      git:
        repo: "{{ packer_templates_git_repo }}"
        dest: "{{ build_path }}/packer-templates"
        force: yes
