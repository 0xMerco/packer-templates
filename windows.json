{
  "_comment1": "NAME=windows-10-enterprise-x64-eval WINDOWS_VERSION=10 VIRTIO_WIN_ISO=./packer_cache/virtio-win.iso ISO_CHECKSUM=9ef81b6a101afd57b2dbfa44d5c8f7bc94ff45b51b82c5a1f9267ce2e63e9f53 ISO_URL=https://software-download.microsoft.com/download/pr/18363.418.191007-0143.19h2_release_svc_refresh_CLIENTENTERPRISEEVAL_OEMRET_x64FRE_en-us.iso PACKER_IMAGES_OUTPUT_DIR=/var/tmp/ TMPDIR=/var/tmp/ packer build -only=qemu windows.json",
  "_comment2": "NAME=windows-server-2012_r2-standard-x64-eval WINDOWS_VERSION=2012 VIRTIO_WIN_ISO=./packer_cache/virtio-win.iso ISO_CHECKSUM=6612b5b1f53e845aacdf96e974bb119a3d9b4dcb5b82e65804ab7e534dc7b4d5 ISO_URL=https://care.dlservice.microsoft.com/dl/download/6/2/A/62A76ABB-9990-4EFC-A4FE-C7D698DAEB96/9600.17050.WINBLUE_REFRESH.140317-1640_X64FRE_SERVER_EVAL_EN-US-IR3_SSS_X64FREE_EN-US_DV9.ISO PACKER_IMAGES_OUTPUT_DIR=/var/tmp/ TMPDIR=/var/tmp/ packer build -only=qemu windows.json",
  "_comment3": "NAME=windows-server-2016-standard-x64-eval WINDOWS_VERSION=2016 VIRTIO_WIN_ISO=./packer_cache/virtio-win.iso ISO_CHECKSUM=1ce702a578a3cb1ac3d14873980838590f06d5b7101c5daaccbac9d73f1fb50f ISO_URL=https://software-download.microsoft.com/download/pr/Windows_Server_2016_Datacenter_EVAL_en-us_14393_refresh.ISO PACKER_IMAGES_OUTPUT_DIR=/var/tmp/ TMPDIR=/var/tmp/ packer build -only=qemu windows.json",
  "_comment4": "NAME=windows-server-2019-standard-x64-eval WINDOWS_VERSION=2019 VIRTIO_WIN_ISO=./packer_cache/virtio-win.iso ISO_CHECKSUM=549bca46c055157291be6c22a3aaaed8330e78ef4382c99ee82c896426a1cee1 ISO_URL=https://software-download.microsoft.com/download/pr/17763.737.190906-2324.rs5_release_svc_refresh_SERVER_EVAL_x64FRE_en-us_1.iso PACKER_IMAGES_OUTPUT_DIR=/var/tmp/ TMPDIR=/var/tmp/ packer build -only=qemu windows.json",
  "variables": {
    "name": "{{ env `NAME` }}",
    "packer_images_output_dir": "{{ env `PACKER_IMAGES_OUTPUT_DIR` }}",
    "cpus": "2",
    "memory": "4096",
    "virtio_win_iso": "{{ env `VIRTIO_WIN_ISO` }}",
    "iso_url": "{{ env `ISO_URL` }}",
    "iso_checksum": "{{ env `ISO_CHECKSUM` }}",
    "windows_version": "{{ env `WINDOWS_VERSION` }}",
    "autounattend": "http/windows-{{ env `WINDOWS_VERSION` }}/Autounattend.xml",
    "winrm_username": "vagrant",
    "winrm_password": "vagrant",
    "disk_size": "51200",
    "headless": "false"
  },
  "builders": [
    {
      "vm_name": "{{ user `name` }}",
      "type": "qemu",
      "iso_checksum_type": "sha256",
      "iso_checksum": "{{ user `iso_checksum` }}",
      "iso_urls": [
        "{{ user `iso_url` }}"
      ],
      "communicator": "winrm",
      "winrm_username": "{{ user `winrm_username` }}",
      "winrm_password": "{{ user `winrm_password` }}",
      "winrm_timeout": "12h",
      "winrm_use_ssl": "true",
      "winrm_insecure": "true",
      "headless": "{{ user `headless` }}",
      "output_directory": "{{ user `name` }}-qemu",
      "shutdown_command": "del C:\\script.bat & A:\\sysprep.bat",
      "shutdown_timeout": "15m",
      "accelerator": "kvm",
      "qemuargs": [
        [
          "-m",
          "{{ user `memory` }}"
        ],
        [
          "-smp",
          "{{ user `cpus` }}"
        ],
        [
          "-drive",
          "file={{ user `virtio_win_iso` }},media=cdrom,index=3"
        ],
        [
          "-drive",
          "file={{ user `name` }}-qemu/{{ .Name }},if=virtio,cache=writeback,discard=ignore,format=qcow2,index=1"
        ]
      ],
      "disk_size": "{{ user `disk_size` }}",
      "floppy_files": [
        "{{ user `autounattend` }}",
        "scripts/win-common/fixnetwork.ps1",
        "scripts/win-common/unattend.xml",
        "scripts/win-common/sysprep.bat"
      ]
    },
    {
      "vm_name": "{{ user `name` }}",
      "type": "virtualbox-iso",
      "guest_os_type": "Windows{{ user `windows_version` }}_64",
      "iso_checksum_type": "sha256",
      "iso_checksum": "{{ user `iso_checksum` }}",
      "iso_urls": [
        "{{ user `iso_url` }}"
      ],
      "communicator": "winrm",
      "winrm_username": "{{ user `winrm_username` }}",
      "winrm_password": "{{ user `winrm_password` }}",
      "winrm_timeout": "12h",
      "winrm_use_ssl": "true",
      "winrm_insecure": "true",
      "headless": "{{ user `headless` }}",
      "output_directory": "{{ user `name` }}-virtualbox-iso",
      "guest_additions_mode": "attach",
      "shutdown_command": "del C:\\script.bat & A:\\sysprep.bat",
      "shutdown_timeout": "15m",
      "hard_drive_interface": "sata",
      "disk_size": "{{ user `disk_size` }}",
      "vboxmanage": [
        [
          "modifyvm",
          "{{ .Name }}",
          "--cpus",
          "{{ user `cpus` }}"
        ],
        [
          "modifyvm",
          "{{ .Name }}",
          "--memory",
          "{{ user `memory` }}"
        ],
        [
          "modifyvm",
          "{{ .Name }}",
          "--graphicscontroller",
          "vboxsvga"
        ],
        [
          "modifyvm",
          "{{ .Name }}",
          "--audio",
          "alsa"
        ],
        [
          "modifyvm",
          "{{ .Name }}",
          "--audiocontroller",
          "hda"
        ]
      ],
      "floppy_files": [
        "{{ user `autounattend` }}",
        "scripts/win-common/fixnetwork.ps1",
        "scripts/win-common/unattend.xml",
        "scripts/win-common/sysprep.bat"
      ]
    }
  ],
  "provisioners": [
    {
      "type": "sleep",
      "duration": "1m"
    },
    {
      "type": "powershell",
      "only": [
        "virtualbox-iso"
      ],
      "inline": [
        "$cert = (Get-AuthenticodeSignature 'E:\\VBoxWindowsAdditions.exe').SignerCertificate; [System.IO.File]::WriteAllBytes('C:\\vbox.cer', $cert.Export([System.Security.Cryptography.X509Certificates.X509ContentType]::Cert));",
        "certutil.exe -f -addstore TrustedPublisher C:\\vbox.cer",
        "E:\\VBoxWindowsAdditions.exe /S"
      ]
    },
    {
      "type": "shell-local",
      "environment_vars": [
        "ANSIBLE_CONFIG=ansible/ansible.cfg",
        "ANSIBLE_REMOTE_PORT={{ build `Port` }}",
        "ANSIBLE_REMOTE_USER={{ user `winrm_username` }}"
      ],
      "command": "ansible-playbook --connection=winrm --extra-vars='ansible_winrm_server_cert_validation=ignore packer_build_name={{ user `name` }} ansible_password='{{ user `winrm_password` }}'' -i 127.0.0.1, ansible/win-simple.yml"
    },
    {
      "type": "windows-shell",
      "pause_before": "5m",
      "inline": [
        "%HOMEDRIVE%\\BleachBit-Portable\\bleachbit_console.exe --clean deepscan.backup deepscan.ds_store deepscan.thumbs_db deepscan.tmp internet_explorer.cache internet_explorer.cookies internet_explorer.downloads internet_explorer.forms internet_explorer.history internet_explorer.logs system.clipboard system.custom system.logs system.memory_dump system.muicache system.prefetch system.recycle_bin system.tmp system.updates windows_defender.backup windows_defender.history windows_defender.logs windows_defender.quarantine windows_defender.temp windows_explorer.mru windows_explorer.recent_documents windows_explorer.run windows_explorer.search_history windows_explorer.shellbags windows_explorer.thumbnails  > NUL",
        "%HOMEDRIVE%\\ultradefrag-portable-7.1.3.amd64\\udefrag.exe --optimize --repeat --suppress-progress-indicator %SystemDrive%",
        "rmdir /s /q %HOMEDRIVE%\\ultradefrag-portable-7.1.3.amd64",
        "%HOMEDRIVE%\\BleachBit-Portable\\bleachbit_console.exe --clean system.free_disk_space",
        "rmdir /s /q %HOMEDRIVE%\\BleachBit-Portable"
      ],
      "remote_path": "C:\\script.bat"
    }
  ],
  "post-processors": [
    [
      {
        "type": "vagrant",
        "compression_level": 9,
        "vagrantfile_template": "Vagrantfile-windows.template",
        "output": "{{ user `packer_images_output_dir` }}/{{ user `name` }}-{{ .Provider }}.box"
      }
    ]
  ]
}
